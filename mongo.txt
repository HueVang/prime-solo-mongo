// 1.Create a collection named orders.

db.createCollection("orders")

// 2.Insert at least 3 documents that represent an order. IMPORTANT: See section below for fields.

db.orders.insert({
... orderDate : new Date("2015-05-12"),
... orderTotal : 12.99,
... lineItems : [
... { unitPrice : 3.00, quantity : 25, productName  : "Cheese" }
... ]
... })

db.orders.insert({
... orderDate : new Date("2016-06-02"),
... orderTotal : 30,
... lineItems : [
... { unitPrice : 4.00, quantity : 10, productName : "Ham"}
... ]
... })


db.orders.insert({
... orderDate : new Date("2016-09-25"),
... orderTotal : 2,
... lineItems : [
... { unitPrice : 13.00, quantity : 2, productName : "Bread"}
... ]
... })


// 3.Find a single order document, any order document.

db.orders.find({ "_id" : ObjectId("589a209415178b761914afbc")})

// 4.Find all orders and make them look pretty.

db.orders.find().pretty()

// 5.Find all orders with an orderDate that is prior to 1/1/2016.

db.orders.find({
... orderDate : {
... $lt : ISODate("2016-01-01T00:00:00.000Z")
... }
... })

// 6.Find all orders with an orderDate that is after 1/1/2016.

db.orders.find({
... orderDate : {
... $gt : ISODate("2016-01-01T00:00:00.000Z")
... }
... })

// 7.Find orders with lineItems that have a quantity that is less than 50, but greater than 5. HINT: Look at $and and dot notation.

db.orders.find({ $and : [ { "lineItems.quantity" : { $lt : 50 } },  {"lineItems.quantity" : { $gt : 5 } } ] }).pretty()

// 8.Update one of your line items to 42.99. HINT: Look at dot notation

db.orders.update({"_id" : ObjectId("589a217315178b761914afbd")}, {$set : {"lineItems.0.unitPrice" : 42.99 }})

// 9.Remove one of your orders.

db.orders.remove({"_id" : ObjectId("589a21b415178b761914afbe")})
